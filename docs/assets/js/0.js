webpackJsonp([0],{312:function(e,a,t){var s,i;s=t(327);var r=t(354);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},314:function(e,a,t){var s,i;s=t(329);var r=t(352);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},315:function(e,a,t){var s,i,r=t(355);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},316:function(e,a,t){var s,i;s=t(330);var r=t(358);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},317:function(e,a){e.exports={rules:["after","alpha_dash","alpha_num","alpha","before","between","confirmed","date_between","date_format","decimal","digits","dimensions","email","ext","image","in","ip","max","mimes","min","not_in","numeric","regex","required","size","url"]}},326:function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var s=t(1);a.default={validator:null,data:function(){return{email:"",name:"",errors:null}},watch:{email:function(e){this.validator.validate("email",e)},name:function(e){this.validator.validate("name",e)}},methods:{validateForm:function(){this.validator.validateAll({email:this.email,name:this.name})},clearErrors:function(){this.errors.clear()}},created:function(){this.validator=new s.Validator({email:"required|email",name:"required|alpha|min:3"}),this.$set(this,"errors",this.validator.errorBag)}}},327:function(e,a,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(a,"__esModule",{value:!0});var i=t(347),r=s(i);a.default={components:{ValidatorExample:r.default}}},329:function(e,a,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(a,"__esModule",{value:!0});var i=t(4),r=s(i),n=t(317),l=s(n),o=t(336),h=s(o);a.default={data:function(){return{rules:new r.default(l.default.rules).chunk(10).all()}},components:{BasicExample:h.default}}},330:function(e,a,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(a,"__esModule",{value:!0});var i=t(4),r=s(i),n=t(317),l=s(n);a.default={data:function(){return{rules:new r.default(l.default.rules).chunk(10).all()}}}},336:function(e,a,t){var s,i,r=t(363);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},347:function(e,a,t){var s,i;s=t(326);var r=t(362);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},352:function(e,a){e.exports={render:function(){var e=this;return e._h("div",[e._m(0)," ",e._m(1)," ",e._m(2)," ",e._m(3),e._m(4)," ",e._h("b",["Vue 1.x"])," ",e._h("code-block",{staticClass:"language-bash"},["npm install vee-validate --save"])," ",e._h("b",["Vue 2.x"])," ",e._h("code-block",{staticClass:"language-bash"},["npm install vee-validate@next --save"])," ",e._m(5)," ",e._h("b",["Vue 1.x"])," ",e._h("code-block",{staticClass:"language-bash"},["bower install vee-validate#1.0.0-beta.8 --save"])," ",e._h("b",["Vue 2.x"])," ",e._h("code-block",{staticClass:"language-bash"},["bower install vee-validate#2.0.0-beta.13 --save"])," ",e._m(6),"\n        Head over to ",e._h("a",{attrs:{href:"https://www.jsdelivr.com/projects/vee-validate",target:"jsdelivr"}},["jsdelivr"])," and grab the latest version.\n\n        Then you may use it like this:\n        ",e._h("code-block",{staticClass:"language-html"},['\n            <script src="path/to/vue.js"></script>\n            <script src="path/to/vee-validate.js"></script>\n            <script>\n                Vue.use(VeeValidate); // good to go.\n            </script>\n        ']),"\n\n        or you may import it using ES6:\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            import Vue from 'vue';\n            import VeeValidate from 'vee-validate';\n\n            Vue.use(VeeValidate);\n        "])," ",e._h("p")," ",e._m(7)," ",e._m(8)," ",e._h("basic-example")," ",e._h("div",{staticClass:"flex-center"},[e._h("router-link",{staticClass:"link",attrs:{to:{name:"examples"}}},["More Examples"])])," ",e._h("br")," ",e._h("note",{attrs:{title:"Note"}},["\n        The field name that appears in the error messages is usually the input's ",e._h("code",["name"])," attribute, unless you passed a value from the vue instance ",e._h("code",["$data"])," object,\n        The name will be then the expression name, check the ",e._h("router-link",{attrs:{to:{name:"examples",hash:"#validate-data-vv-example"}}},["data validation example"]),".\n    "])," ",e._h("note",["\n        Its always a good idea to have a ",e._h("code",["name"])," attribute on your fields. If you are not binding the field and do not have a name attribute the validator won't properly register the field.\n    "])," ",e._m(9)," ",e._h("p",["\n        Naturally, you would want to display the errors to your users. The plugin augments your Vue instance with a private validator object and a public errors data object.\n        You are responsible for how the errors should be rendered.\n        ",e._h("br"),e._h("br"),"The errors object exposes a simple methods to help you render errors:\n        ",e._m(10),"\n        There are a few more ",e._h("router-link",{staticClass:"link",attrs:{to:{name:"api",hash:"#error-bag"}}},["methods"])," that you can use to manipulate the errors object.\n    "])," ",e._m(11)," ",e._h("p",["There are more than 20 rules available to validate your inputs:"])," ",e._h("div",{staticClass:"columns is-multiline"},[e._l(e.rules,function(a){return e._h("div",{class:"column is-"+12/e.rules.length},[e._h("ul",{staticClass:"list-circle"},[e._l(a,function(a){return e._h("li",[e._h("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#rule-"+a}}},[e._s(a)])])})])])})])," ",e._h("p",["Visit the ",e._h("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#available-rules"}}},["rules documentation"])," to learn more about how to use each rule, and how to ",e._h("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#custom-rules"}}},["create your own"]),"."])," ",e._m(12)," ",e._m(13)," ",e._h("code-block",{staticClass:"language-javascript"},["\n        import Vue from 'vue';\n        import VeeValidate from 'vee-validate';\n\n        const config = {\n            errorBagName: 'errors', // change if property conflicts.\n            delay: 0,\n            locale: 'en',\n            messages: null,\n            strict: true\n        };\n\n        Vue.use(VeeValidate, config);\n    "])," ",e._h("ul",{staticClass:"list-circle"},[e._m(14)," ",e._m(15)," ",e._m(16)," ",e._h("li",[e._h("code",{staticClass:"inline"},["messages:"])," The messages to be generated for the validation errors, check ",e._h("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#custom-messages"}}},["custom messages"])," section."])," ",e._m(17)])])},staticRenderFns:[function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"about"}},[e._h("a",{attrs:{href:"#about"}},["What is vee-validate?"])])},function(){var e=this;return e._h("p",["\n        This is a lightweight plugin for ",e._h("a",{staticClass:"link",attrs:{href:"https://vuejs.org/"}},["Vue.js"])," that allows you to validate input fields, and display errors.\n        ",e._h("br"),e._h("br"),"\n        You don't have to do anything fancy in your app, most of the work goes into the html.\n        You only need to specify for each input what kind of validators should be used when the value changes. You will then get informed of the errors for each field.\n        ",e._h("br"),e._h("br"),"\n        Although most of the validations occur automatically, you can use the validator however you see fit. The validator object has no dependencies and is a standalone object.\n        ",e._h("br"),e._h("br"),"\n        Currently there are over 20 validation rules available in the plugin.\n        This plugin is inspired by ",e._h("a",{staticClass:"link",attrs:{href:"https://laravel.com/"}},["PHP Framework Laravel's validation syntax"]),".\n        ",e._h("br"),e._h("br"),"It also supports Vue 2.0. All examples here are built using Vue 2.0 with the plugin.\n    "])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"installation"}},[e._h("a",{attrs:{href:"#installation"}},["Installation"])])},function(){var e=this;return e._h("p",["\n        You can install this plugin via ",e._h("a",{staticClass:"link",attrs:{href:"#npm"}},["npm"])," or ",e._h("a",{staticClass:"link",attrs:{href:"#bower"}},["bower"])," or via a ",e._h("a",{staticClass:"link",attrs:{href:"#cdn"}},["CDN"]),".\n        "])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"npm"}},[e._h("a",{attrs:{href:"#npm"}},["npm"])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"bower"}},[e._h("a",{attrs:{href:"#bower"}},["bower"])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"cdn"}},[e._h("a",{attrs:{href:"#cdn"}},["CDN"])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"basic-example"}},[e._h("a",{attrs:{href:"#basic-example"}},["Basic Example"])])},function(){var e=this;return e._h("p",["\n        All you need is to add the ",e._h("code",{staticClass:"inline"},["v-validate"])," directive to the input you wish to validate.\n        ",e._h("br"),e._h("br"),"\n        Then add a ",e._h("code",{staticClass:"inline"},["data-vv-rules"])," attribute which contains a list of validation rules separated by a pipe '",e._h("code",{staticClass:"inline"},["|"]),"'.\n        For the following example the validation rules are straight forward, use ",e._h("code",{staticClass:"inline"},["required"])," to indicate that the field is required.\n        And ",e._h("code",{staticClass:"inline"},["email"])," to indicate that the field must be an email.\n        To combine both rules we assign the value ",e._h("code",{staticClass:"inline"},["required|email"])," to the ",e._h("code",{staticClass:"inline"},["data-vv-rules"])," data-vv-set attribute.\n    "])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"render-errors"}},[e._h("a",{attrs:{href:"#render-errors"}},["Rendering Errors"])])},function(){var e=this;return e._h("ul",{staticClass:"list-circle"},[e._h("li",[e._h("code",{staticClass:"inline"},["first('field')"])," Fetches the first error message associated with that field."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["collect('field')"])," Fetches all error messages associated with that field. alternativly you can pass nothing and it will return errors grouped by fields"])," ",e._h("li",[e._h("code",{staticClass:"inline"},["has('field')"])," Checks if there are any errors associated with that field."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["all()"])," Gets all error messages."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["any()"])," Checks if there are any errors."])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"available-rules"}},[e._h("a",{attrs:{href:"#available-rules"}},["Available Rules"])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"configuration"}},[e._h("a",{attrs:{href:"#configuration"}},["Configuration"])])},function(){var e=this;return e._h("p",["\n        You may need to configure some options to tweak some of the plugin internals, this is not required, but could cause conflicts. For example: if you are using a property called ",e._h("code",{staticClass:"inline"},["errors"])," on your vue instance this may cause conflicts.\n         Here is how you would set up the options along with the default values:\n    "])},function(){var e=this;return e._h("li",[e._h("code",{staticClass:"inline"},["errorBagName:"])," The name of the ErrorBag object that will be injected in each of Vue's instances' data."])},function(){var e=this;return e._h("li",[e._h("code",{staticClass:"inline"},["delay:"])," The default debounce time for all inputs (only affects validations)."])},function(){var e=this;return e._h("li",[e._h("code",{staticClass:"inline"},["locale:"])," The default language for the validation messages."])},function(){var e=this;return e._h("li",[e._h("code",{staticClass:"inline"},["strict:"])," Fields that have no rules will fail validation unless ",e._h("code",{staticClass:"inline"},["strict"])," is set to false."])}]}},354:function(e,a){e.exports={render:function(){var e=this;return e._h("div",[e._m(0)," ",e._h("p",["\n        The ErrorBag class is a wrapper around an array, and is standalone and has no dependencies, you can use it in your code for any reason:\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            import { ErrorBag } from 'vee-validate'; // ES6 Import.\n            const bag = new ErrorBag();\n        "]),"\n        The internal array contains the error objects, the structure is:\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            {\n                errors: [\n                    { field: 'Field name', msg: 'Error message' },\n                    { field: 'Field name', msg: 'Error message' },\n                    { field: 'Field name', msg: 'Error message' }\n                ]\n            }\n        "])])," ",e._h("p",[e._h("b",{staticClass:"important"},["Available Methods:"])," ",e._m(1)," ",e._h("note",["\n            All of the methods above accept an optional ",e._h("code",["scope"])," parameter which will limit the method effect to a specific scope. You can read more about scopes ",e._h("router-link",{attrs:{to:{name:"examples",hash:"#scope-example"}}},["here"]),".\n        "])])," ",e._m(2)," ",e._h("p",["\n        The validator is injected to the Vue instance as ",e._h("code",{staticClass:"inline"},["$validator"])," automatically.\n        However it is also a stand alone class and can be used separately for programmatically validating values.\n        The constructor can optionally take an object to map each field name to a set of validations.\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            import { Validator } from 'vee-validate';\n            const validator = new Validator({\n                email: 'required|email',\n                name: 'required|alpha|min:3',\n            }); // or Validator.create({ ... });\n        "]),"\n        But you can construct the object without passing anything and add the validation rules later.\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            import { Validator } from 'vee-validate';\n            const validator = new Validator();\n\n            validator.attach('email', 'required|email'); // attach field.\n            validator.attach('name', 'required|alpha', 'Full Name'); // attach field with display name for error generation.\n\n            validator.detach('email'); // you can also detach fields.\n        "]),"\n        After that you can validate values with ",e._h("code",{staticClass:"inline"},["validate(field, value)"])," which should return a boolean if all validations pass. Like this:\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            validator.validate('email', 'foo@bar.com'); // true\n            validator.validate('email', 'foo@bar'); // false\n        "])," ",e._h("note",["\n            Most validators return a Boolean, however some validators (very few) return a ",e._h("code",["Promise"])," The validator is aware of this and will only return a Promise if at least one validation yields a promise. the promise is resolved to boolean which you can later chain to check your fields.\n        "])," ",e._h("br"),"\n        You can validate multiple values at the same time using ",e._h("code",{staticClass:"inline"},["validateAll(obj)"]),":\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            validator.validateAll({\n                email: 'foo@bar.com',\n                name: 'John Snow'\n            });\n        "]),"\n        Returns true if all values passed validation, false if at least one value failed validation. will return a ",e._h("code",["Promise"])," if at least one field validation rule returned a ",e._h("code",["Promise"])," which is also resolved to a boolean. The ErrorBag will be populated with any errors encountered.\n        You can access the ",e._h("code",{staticClass:"inline"},["errorBag"])," property directly or using ",e._h("code",{staticClass:"inline"},["getErrors()"]),".\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            var errorBag = validator.errorBag;\n            // or\n            var errorBag = validator.getErrors();\n        "]),"\n\n        The validator instance can only generate messages for one locale at a time. But you need to use ",e._h("code",{staticClass:"inline"},["setLocale"])," method to switch the validator locale.\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            validator.setLocale('ar');\n        "])," ",e._h("note",["\n            Each validator keeps track of its own locale. so be sure to update any instances whenever the language changes.\n            For more information about how to overwrite messages and add new ones, please refer to the ",e._h("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"custom-messages"}}},["custom messages"])," section.\n        "]),"\n        The Validator class has a static method called ",e._h("code",{staticClass:"inline"},["setDefaultLocale(string)"])," which sets the default language for all newly instantiated validators to that language.\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            import { Validator } from 'vee-validate';\n\n            Validator.setDefaultLocale('ar'); // from now on, all validators that are created will have this locale.\n            Validator.create().locale // 'ar';\n\n            Validator.setDefaultLocale(); // resets to english, again for all newly created validators, previously created ones won't be touched.\n        "])])," ",e._m(3)," ",e._h("p",["\n        Here is an example of using the validator without the directive, which means you will be responsible for monitoring input changes on your own, and calling the API methods as you see fit.\n        This example uses a Vue instance to simplify things, but it can be used in plain JavaScript as well.\n    "])," ",e._h("validator-example")])},staticRenderFns:[function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"error-bag"}},[e._h("a",{attrs:{href:"#error-bag"}},["ErrorBag"])])},function(){var e=this;return e._h("ul",{staticClass:"list-circle"},[e._h("li",[e._h("code",{staticClass:"inline"},["add(String field, String msg)"])," adds an error object to the internal array."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["all()"])," Gets all messages from the internal array."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["any()"])," Checks if there are any errors."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["clear()"])," Removes all items from the internal array."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["collect(String field)"])," Collects errors associated with a specific field. not passing the field name will group all errors by field name instead."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["count()"])," Gets the length of the internal array. or the number of messages."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["first(String field)"])," Gets the first error message associated with the specified field."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["has(String field)"])," Checks if there is at least one error associated with the specified field."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["remove(String field)"])," Removes all errors for a specified field from the internal array."])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"validator"}},[e._h("a",{attrs:{href:"#validator"}},["Validator"])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"validator-example"}},[e._h("a",{attrs:{href:"#validator-example"}},["Validator Example"])])}]}},355:function(e,a){e.exports={render:function(){var e=this;return e._h("div",[e._m(0)," ",e._h("p",["\n        This plugin only comes with English messages to keep things small, but it was built with flexible message generation in mind.\n        ",e._h("br"),"\n        The ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/en.js",target:"github"}},["English messages file"])," is an example on how you would structure those messages.\n        Then you may want to update the validator dictionary, which should happen once in your app startup. still you may update them whenever you want in any point of your app, review the ",e._h("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#custom-messages"}}},["custom messages"])," here.\n    "])," ",e._m(1)," ",e._h("p",["\n        Seeing 'first_name' in your error messages can't be very good for your user experience, this plugin offer a couple of solutions:\n\n        You can use the ",e._h("code",["data-vv-as"])," attribute on your field and give it a better name for your users, it would look like this:\n        ",e._h("code-block",{staticClass:"language-html"},['\n            <input v-validate data-vv-rules="alpha|min:3" data-vv-as="First Name" name="first_name" type="text">\n        ']),"\n\n        Now when any error message is generated for this input will use the ",e._h("code",["data-vv-as"])," value instead of the actual field name. this is also the same for binding expressions.\n        While this is very useful for simple setups and displaying localized names, but it is only ideal for a single-locale page, for multi-localized pages and more advanced usages you might want to check the approach below.\n    "])," ",e._m(2)," ",e._m(3)," ",e._h("p",["\n        Here is a little code example on how would you add support for your localized messages and attributes. Note that this is the entry point of your application.\n    "])," ",e._h("code-block",{staticClass:"language-javascript"},["\n        import Vue from 'vue';\n        import VeeValidate from 'vee-validate';\n        import messagesAr from './strings/validator/messages/ar.js';\n        import attributesAr from './strings/validator/attributes/ar.js';\n        import attributesEn from './strings/validator/attributes/en.js';\n\n        // Pass options to make all validators use the arabic language, also merge the english and arabic attributes with the internal dictionary.\n        // You can still modify each validator locale indvidually via the 'setLocale' on the validator instance.\n        Vue.use(VeeValidate, {\n            locale: 'ar',\n            dictionary: { // dictionary object\n                en: {  // locale key\n                    attributes: attributesEn // English attributes\n                }\n                ar: {   // locale key\n                    messages: messagesAr,   // Arabic messages\n                    attributes: attributesAr  // Arabic attributes\n                }\n            }\n        });\n\n\n        new Vue({\n            el: '#app',\n            data: {\n                // Some Data ...\n            },\n            methods {\n                // Cool methods ...\n            }\n        });\n    "])," ",e._h("note",["\n        Both the validator class and the validator instances offer ",e._h("code",{staticClass:"inline"},["setLocale"])," method which changes the current locale for ",e._h("b",["All Validators"])," to the specified locale, not providing a locale will switch them to English instead.\n    "])," ",e._h("div",["\n        A working example can be found ",e._h("router-link",{staticClass:"link",attrs:{to:{name:"examples",hash:"#locale-example"}}},["here"]),".\n    "])," ",e._m(4)," ",e._m(5)," ",e._m(6)," ",e._m(7)])},staticRenderFns:[function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"translation"}},[e._h("a",{attrs:{href:"#translation"}},["Translation"])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"attributes-data-vv-as"}},[e._h("a",{attrs:{href:"#attributes-data-vv-as"}},["Attributes (data-vv-as)"])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"attributes-dictionary"}},[e._h("a",{attrs:{href:"#attributes-dictionary"}},["Attributes (Dictionary)"])])},function(){var e=this;return e._h("p",["\n        All validators have access to a simple dictionary that is shared between all of them, this dictionary contains localized error messages and attributes, if the validator finds a localized attribute name for that field it will be used instead of the field name.\n        Pretty much like ",e._h("code",["data-vv-as"])," but ",e._h("code",["data-vv-as"])," takes priorty if both are found.\n    "])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"localized-files"}},[e._h("a",{attrs:{href:"#localized-files"}},["Localized Files"])])},function(){var e=this;return e._h("p",["\n        In the ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/tree/master/dist/locale",target:"github"}},[e._h("code",{staticClass:"inline"},["dist/locale"])])," directory of this plugin, is a collection of localized files.\n        If you can't find your locale, you could help this plugin by contributing a localized version to the ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate",target:"github"}},["repo"]),". I will happily accept it.\n    "])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"available-locales"}},[e._h("a",{attrs:{href:"#available-locales"}},["Available Locales:"])])},function(){var e=this;return e._h("ul",{staticClass:"list-circle"},[e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/en.js",target:"github"}},["English"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/ar.js",target:"github"}},["Arabic"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/es.js",target:"github"}},["Spanish"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/ClaudioEyzaguirre",target:"github"}},["@ClaudioEyzaguirre"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/pt_BR.js",target:"github"}},["Brazilian Portuguese"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/edbizarro",target:"github"}},["@edbizarro"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/fi.js",target:"github"}},["Finnish"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/anttisand",target:"github"}},["@anttisand"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/de.js",target:"github"}},["German"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/kayschima",target:"github"}},["@kayschima"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/fr.js",target:"github"}},["French"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/thierrymichel",target:"github"}},["@thierrymichel"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/vi.js",target:"github"}},["Vietnamese"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/imcvampire",target:"github"}},["@imcvampire"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/it.js",target:"github"}},["Italian"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/ionut-tanasa",target:"github"}},["@ionut-tanasa"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/nl.js",target:"github"}},["Dutch"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/Woutje99",target:"github"}},["@Woutje99"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/el.js",target:"github"}},["Greek"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/rousos87",target:"github"}},["@rousos87"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/id.js",target:"github"}},["Indonesian"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/gunturaf",target:"github"}},["@gunturaf"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/da.js",target:"github"}},["Danish"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/wolthers",target:"github"}},["@wolthers"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/zh_CN.js",target:"github"}},["Chinese"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/zppro",target:"github"}},["@zppro"])])," ",e._h("li",[e._h("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/pl.js",target:"github"}},["Polish"])," by ",e._h("a",{staticClass:"link",attrs:{href:"https://github.com/murbanowicz",target:"github"}},["@murbanowicz"])])])}]}},358:function(e,a){e.exports={render:function(){var e=this;return e._h("div",[e._m(0)," ",e._h("p",["\n        The validation rules have a very simple syntax similar to ",e._h("a",{staticClass:"link",attrs:{href:"https://laravel.com/docs/5.2/validation"}},["Laravel validation syntax"]),".\n        A validation expression is a string of a series of validators separated by a pipe ",e._h("code",{staticClass:"inline"},["|"]),":\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            var single = 'required'; // single rule.\n            var multiple = 'required|numeric' // multiple rules.\n        "]),"\n        Some rules can have parameters, which are passed in a comma separated list without spaces.\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            var someRule = 'in:1,2,3,4';\n        "])," ",e._h("note",["\n            The validators (rules) and their parameters are statically saved, in order to update some validation rule, you have to attach it again with the new parameters and it will be overwritten.\n        "])])," ",e._m(1)," ",e._m(2)," ",e._h("div",{staticClass:"columns is-multiline"},[e._l(e.rules,function(a){return e._h("div",{class:"column is-"+12/e.rules.length},[e._h("ul",{staticClass:"list-circle"},[e._l(a,function(a){return e._h("li",[e._h("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#rule-"+a}}},[e._s(a)])])})])])})])," ",e._h("div",{staticClass:"rules"},[e._h("note",{attrs:{title:"note"}},["\n            Date validators always require the ",e._h("code",["date_format"])," rule to be always present and must preceed them in the rules order. The date validators are not enabled by default, they require ",e._h("a",{
attrs:{href:"http://momentjs.com"}},["momentjs"])," in order to work.\n            If your setup contains momentjs globally, it will be installed automatically for all validator instances. otherwise you may want to pass the moment reference to ",e._h("code",["installDateTimeValidators(moment)"])," which is available both statically and on instances.\n\n            Also note that the date validators always use the ",e._h("a",{staticClass:"link",attrs:{href:"http://momentjs.com/guides/#/parsing/strict-mode/"}},["'strict' moment parsing mode"]),".\n        "])," ",e._h("note",["\n            In the rule signature required parameters are enclosed within ",e._h("code",["{}"])," like this: ",e._h("code",["{param}"]),".\n            ",e._h("br"),"\n            Optional parameters have a ",e._h("code",["?"])," at the end: ",e._h("code",["{optional?}"]),".\n            ",e._h("br"),"\n            Lists are enclosed withn brackets ",e._h("code",["[]"]),". ex: ",e._h("code",["[list]"]),".\n        "])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-after"}},[e._h("b",{staticClass:"important"},["after:{target}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must have a valid date and is after the date value in the target field.\n            "])," ",e._m(3)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("after_field")},attrs:{"data-vv-rules":"date_format:DD/MM/YYYY|after:after_field_target",name:"after_field",type:"text",placeholder:"DD/MM/YYYY"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("after_field"),expression:"errors.has('after_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("after_field"))])])," ",e._h("p",{staticClass:"control"},[e._h("input",{class:{input:!0,"is-danger":e.errors.has("after_field")},attrs:{name:"after_field_target",type:"text",placeholder:"DD/MM/YYYY"}})])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-alpha"}},[e._h("b",{staticClass:"important"},["alpha"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation may only contain alphabetic characters.\n            "])," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("alpha_field")},attrs:{"data-vv-rules":"alpha",name:"alpha_field",type:"text",placeholder:"Enter Some Characters..."}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("alpha_field"),expression:"errors.has('alpha_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("alpha_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-alpha_dash"}},[e._h("b",{staticClass:"important"},["alpha_dash"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation may contain alphabetic characters, numbers, dashes or underscores.\n            "])," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("alpha_dash_field")},attrs:{"data-vv-rules":"alpha_dash",name:"alpha_dash_field",type:"text",placeholder:"Enter characters or dashes"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("alpha_dash_field"),expression:"errors.has('alpha_dash_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("alpha_dash_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-alpha_num"}},[e._h("b",{staticClass:"important"},["alpha_num"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation may contain alphabetic characters or numbers.\n            "])," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("alpha_num_field")},attrs:{"data-vv-rules":"alpha_num",name:"alpha_num_field",type:"text",placeholder:"Enter characters and numbers"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("alpha_num_field"),expression:"errors.has('alpha_num_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("alpha_num_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-before"}},[e._h("b",{staticClass:"important"},["before:{target}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must have a valid date and is before the date value in the target field.\n            "])," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("before_field")},attrs:{"data-vv-rules":"date_format:DD/MM/YYYY|before:before_field_target",name:"before_field",type:"text",placeholder:"DD/MM/YYYY"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("before_field"),expression:"errors.has('before_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("before_field"))])])," ",e._h("p",{staticClass:"control"},[e._h("input",{class:{input:!0,"is-danger":e.errors.has("alpha_field")},attrs:{name:"before_field_target",type:"text",placeholder:"DD/MM/YYYY"}})])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-between"}},[e._h("b",{staticClass:"important"},["between:{min},{max}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must have a numeric value bounded by a minimum value and a maximum value.\n            "])," ",e._m(4)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("between_field")},attrs:{"data-vv-rules":"between:1,11",name:"between_field",type:"text",placeholder:"Enter a number between 1 and 11"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("between_field"),expression:"errors.has('between_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("between_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-confirmed"}},[e._h("b",{staticClass:"important"},["confirmed:{target}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must have the exact same value as the confirmation field.\n            "])," ",e._m(5)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("confirm_field")},attrs:{"data-vv-rules":"confirmed:pw_confirm",name:"confirm_field",type:"password",placeholder:"Enter The Password"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("confirm_field"),expression:"errors.has('confirm_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("confirm_field"))])])," ",e._h("p",{staticClass:"control"},[e._h("input",{class:{input:!0,"is-danger":e.errors.has("confirm_field")},attrs:{name:"pw_confirm",type:"password",placeholder:"Confirm the password"}})])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-date_between"}},[e._h("b",{staticClass:"important"},["date_between:{min,max}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must be a valid date between the two dates specified.\n            "])," ",e._m(6)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("date_between_field")},attrs:{"data-vv-rules":"date_format:DD/MM/YYYY|date_between:10/09/2016,20/09/2016",name:"date_between_field",type:"text",placeholder:"DD/MM/YYYY betweem 10/09/2016 and 20/09/2016"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("date_between_field"),expression:"errors.has('date_between_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("date_between_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-date_format"}},[e._h("b",{staticClass:"important"},["date_format:{format}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must be a valid date in the specified format. This rule must be present when using any date rules.\n            "])," ",e._m(7)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("date_format_field")},attrs:{"data-vv-rules":"date_format:DD/MM/YYYY",name:"date_format_field",type:"text",placeholder:"DD/MM/YYYY"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("date_format_field"),expression:"errors.has('date_format_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("date_format_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-decimal"}},[e._h("b",{staticClass:"important"},["decimal:{decimals?}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must be numeric and may contain the specified amount of decmial points.\n            "])," ",e._m(8)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("decimal_field")},attrs:{"data-vv-rules":"decimal:3",name:"decimal_field",type:"text",placeholder:"Numeric value with decimals"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("decimal_field"),expression:"errors.has('decimal_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("decimal_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-digits"}},[e._h("b",{staticClass:"important"},["digits:{length}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must be numeric and have the specified number of digits.\n            "])," ",e._m(9)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("digits_field")},attrs:{"data-vv-rules":"digits:3",name:"digits_field",type:"text",placeholder:"Enter 3 digit number"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("digits_field"),expression:"errors.has('digits_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("digits_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-dimensions"}},[e._h("b",{staticClass:"important"},["dimensions:{width},{height}"])," ",e._h("div",{staticClass:"description"},["\n                The file added to the field under validation must be an image (jpg,svg,jpeg,png,bmp,gif) have the exact specified dimensions.\n            "])," ",e._m(10)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],attrs:{"data-vv-rules":"dimensions:30,30","data-vv-as":"image",name:"dimensions_field",type:"file"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("dimensions_field"),expression:"errors.has('dimensions_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("dimensions_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-email"}},[e._h("b",{staticClass:"important"},["email"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must be a valid email.\n            "])," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("email_field")},attrs:{"data-vv-rules":"email","data-vv-as":"email",name:"email_field",type:"text",placeholder:"Your Email"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("email_field"),expression:"errors.has('email_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("email_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-ext"}},[e._h("b",{staticClass:"important"},["ext:[extensions]"])," ",e._h("div",{staticClass:"description"},["\n                The file added the field under validation must have one of the extensions specified.\n            "])," ",e._m(11)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],attrs:{"data-vv-rules":"ext:jpeg,jpg","data-vv-as":"field",name:"ext_field",type:"file"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("ext_field"),expression:"errors.has('ext_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("ext_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-image"}},[e._h("b",{staticClass:"important"},["image"])," ",e._h("div",{staticClass:"description"},["\n                The file added the field under validation must have an image mime type (image/*).\n            "])," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],attrs:{"data-vv-rules":"image","data-vv-as":"image",name:"image_field",type:"file"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("image_field"),expression:"errors.has('image_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("image_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-in"}},[e._h("b",{staticClass:"important"},["in:[list]"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must have a value that is in the specified list.\n            "])," ",e._m(12)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("span",{staticClass:"select"},[e._h("select",{directives:[{name:"validate",rawName:"v-validate"}],class:{"is-danger":e.errors.has("in_field")},attrs:{"data-vv-rules":"in:1,2,3",name:"in_field","data-vv-as":"selected"}},[e._h("option",{attrs:{value:"1"}},["One"])," ",e._h("option",{attrs:{value:"2"}},["Two"])," ",e._h("option",{attrs:{value:"3"}},["Three"])," ",e._h("option",{attrs:{value:"4"}},["Invalid"])])])," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("in_field"),expression:"errors.has('in_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("in_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-ip"}},[e._h("b",{staticClass:"important"},["ip"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must have a string that is a valid ipv4 value.\n            "])," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("ip_field")},attrs:{"data-vv-rules":"ip","data-vv-as":"ip",name:"ip_field",type:"text",placeholder:"Your IP Address"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("ip_field"),expression:"errors.has('ip_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("ip_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-max"}},[e._h("b",{staticClass:"important"},["max:{length}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation length may not exceed the specified length.\n            "])," ",e._m(13)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("max_field")},attrs:{"data-vv-rules":"max:11","data-vv-as":"field",name:"max_field",type:"text",placeholder:"11 Characters or shorter"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("max_field"),expression:"errors.has('max_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("max_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-mimes"}},[e._h("b",{staticClass:"important"},["mimes:[list]"])," ",e._h("div",{staticClass:"description"},["\n                The file type added to the field under validation should have one of the specified mime types.\n            "])," ",e._m(14)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("label",{staticClass:"label"},["Image File"])," ",e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],attrs:{"data-vv-rules":"mimes:image/*","data-vv-as":"image",name:"mimes_field",type:"file"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("mimes_field"),expression:"errors.has('mimes_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("mimes_field"))])])])," ",e._h("note",["\n                You can use '*' to specify a wild card, something like ",e._h("code",["mimes:image/*"])," will accept all image types.\n            "])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-min"}},[e._h("b",{staticClass:"important"},["min:{length}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation length should not be less than the specified length.\n            "])," ",e._m(15)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("min_field")},attrs:{"data-vv-rules":"min:3","data-vv-as":"field",name:"min_field",type:"text",placeholder:"Min: 3"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("min_field"),expression:"errors.has('min_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("min_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-not_in"}},[e._h("b",{staticClass:"important"},["not_in:[list]"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation length should not have any value within the specified values.\n            "])," ",e._m(16)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("span",{staticClass:"select"},[e._h("select",{directives:[{name:"validate",rawName:"v-validate"}],class:{"is-danger":e.errors.has("not_in_field")},attrs:{"data-vv-rules":"not_in:1,2,3",name:"not_in_field","data-vv-as":"selected"}},[e._h("option",{attrs:{value:"1"}},["One - Invalid"])," ",e._h("option",{attrs:{value:"2"}},["Two - Invalid"])," ",e._h("option",{attrs:{value:"3"}},["Three - Invalid"])," ",e._h("option",{attrs:{value:"4"}},["Four - Valid"])])])," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("not_in_field"),expression:"errors.has('not_in_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("not_in_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-numeric"}},[e._h("b",{staticClass:"important"},["numeric"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must only consist of numbers.\n            "])," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("numeric_field")},attrs:{"data-vv-rules":"numeric","data-vv-as":"field",name:"numeric_field",type:"text",placeholder:"Numbers only"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("numeric_field"),expression:"errors.has('numeric_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("numeric_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-regex"}},[e._h("b",{staticClass:"important"},["regex:{pattern}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must match the specified regular expression.\n            "])," ",e._m(17)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("label",{staticClass:"label"},["Regex: ^([0-9]+)$"])," ",e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("regex_field")},attrs:{"data-vv-rules":"regex:^([0-9]+)$","data-vv-as":"field",name:"regex_field",type:"text",placeholder:"Numbers only"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("regex_field"),expression:"errors.has('regex_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("regex_field"))])])])," ",e._h("note",["\n                You should not use the pipe | within your regular expression in the HTML as it will cause a conflict with how validators parsing work. A workaround is to attach the field programatically and pass the regex there.\n            "])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-required"}},[e._h("b",{staticClass:"important"},["required"])," ",e._h("div",{staticClass:"description"},['\n                The field under validation must have a non-empty value. by default all validators pass the validation if they have "empty values" unless they are required. those empty values are: empty string, undefined, null.\n            '])," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("required_field")},attrs:{"data-vv-rules":"required","data-vv-as":"field",name:"required_field",type:"text",placeholder:"Is Required"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("required_field"),expression:"errors.has('required_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("required_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-size"}},[e._h("b",{staticClass:"important"},["size:{kb}"])," ",e._h("div",{staticClass:"description"},["\n                The file size added to the field under validation must not exceed the specified size in kilobytes.\n            "])," ",e._m(18)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],attrs:{"data-vv-rules":"size:10",name:"size_field","data-vv-as":"file",type:"file"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("size_field"),expression:"errors.has('size_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("size_field"))])])])])," ",e._h("div",{staticClass:"rule",attrs:{id:"rule-url"}},[e._h("b",{staticClass:"important"},["url:{domain?}"])," ",e._h("div",{staticClass:"description"},["\n                The field under validation must be a valid url. A domain may be optionally passed. supports subdomains.\n            "])," ",e._m(19)," ",e._h("div",[e._h("p",{staticClass:"control"},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("url_field")},attrs:{"data-vv-rules":"url:google.com","data-vv-as":"field",name:"url_field",type:"text",placeholder:"Enter a google.com domain url"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("url_field"),expression:"errors.has('url_field')"}],staticClass:"help is-danger"},[e._s(e.errors.first("url_field"))])])])])])," ",e._m(20)," ",e._h("p",["\n        You can easily add custom rules to the validators, but your custom validation rules must adhere to a contract, or certain structure:\n        ",e._h("br"),e._h("br")," ",e._h("b",{staticClass:"important"},["Function Form:"]),"\n        This is the most basic custom validator form, it consists of only a function that returns either a Boolean or a promise. However it will have a default error message.\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            const validator = (value, args) => {\n                // Return a Boolean or a Promise.\n            }\n        "])," ",e._h("b",{staticClass:"important"},["Object Form:"])," ",e._h("code-block",{staticClass:"language-javascript"},["\n            const validator = {\n                getMessage(field, args) { // will be added to default English messages.\n                    // Returns a message.\n                },\n                validate(value, args) {\n                    // Returns a Boolean or a Promise.\n                }\n            };\n        "])," ",e._h("b",{staticClass:"important"},["Localized Object Form:"])," ",e._h("code-block",{staticClass:"language-javascript"},["\n            const validator = {\n                messages: {\n                    en: (field, args) => {\n                        // Returns a message.\n                    },\n                    cn: (field, args) => {\n                        // Returns a Chinese message.\n                    }\n                },\n                validate(value, args) {\n                    // Returns a Boolean or a Promise.\n                }\n            };\n        "]),"\n        This validator form must have a ",e._h("code",{staticClass:"inline"},["validate"])," method, and either a ",e._h("code",{staticClass:"inline"},["getMessage"])," method, or a ",e._h("code",{staticClass:"inline"},["messages"])," object.\n        The only difference that the latter will allow you to add localized messages, the former only adds it to the English dictionary.\n\n        ",e._h("note",["\n            Notice how the ",e._h("code",["messages"])," methods gets passed the ",e._h("code",["field"])," which is the name of the field under validation as a first parameter.\n            And how the ",e._h("code",["validate"])," method gets passed the value as a first parameter.\n            And both receive the ",e._h("code",["args"])," which are the parameters (arguments) that were configured with the validation rule.\n            for example look at the ",e._h("a",{attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/src/rules/min.js"}},["actual implementation of the min rule"]),".\n        "])," ",e._h("note",["\n            As you can see a validation rule must implement one of the three forms discussed above.\n             Not doing so will throw a ",e._h("code",["ValidatorException"])," with a suitable error message detailing what were you missing.\n        "]),"\n\n        Additionally you may want to provide a reason for failing the validation that may change the error message. For example you may be using an external API and the error message is generated there.\n        ",e._h("br"),e._h("br"),"\n        To acheive this, you need to return an ",e._h("code",["Object"])," instead of a ",e._h("code",["Boolean"])," this object should always contain a ",e._h("code",["valid"])," property and an optional ",e._h("code",["data"])," property, the data property will be passed to the message generator function as the third parameter, then you should use the passed data property to modify the output message. The same thing applies to promises as you resolve the promise with an object containg those properties. here is a custom rule that does just that:\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            const myRule = {\n                getMessage(field, params, data) {\n                    return (data && data.message) || 'Something went wrong';\n                },\n                validate(value) {\n                    return new Promise(resolve => {\n                        resolve({\n                            valid: value === 'trigger' ? false : !! value,\n                            data: value !== 'trigger' ? undefined : {\n                                message: 'Not this value'\n                            }\n                        });\n                    })\n                }\n            };\n        "])])," ",e._h("p",["\n        After creating your validator, You can add it to the list of rules using ",e._h("code",{staticClass:"inline"},["extend(name, validator)"])," method in the validator instance.\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            import { Validator } from 'vee-validate';\n            // These are 'ES6' arrow functions.\n            Validator.extend('truthy', {\n                getMessage: field => 'The ' + field + ' value is not truthy.',\n                validate: value => !! value\n            });\n\n            let instance = new Validator({\n                trueField: 'truthy'\n            });\n\n            // Also there is an instance 'extend' method for convience.\n            instance.extend('falsy', (value) => ! value);\n            instance.attach('falseField', 'falsy');\n        "])," ",e._h("note",["\n            Using any of the ",e._h("code",["extend"])," either statically or on an instance will extend all validators with the new validation rule.\n            extending a new rule that have the same name as an existing rule will throw a ",e._h("code",["ValidatorException"])," with an error message.\n        "])])," ",e._m(21)," ",e._h("p",["\n        Of course you might need to overwrite the error messages, or add new ones. The Validator class and its instances provide an ",e._h("code",{staticClass:"inline"},["updateDictionary"])," method.\n        which will merge the messages with the internal dictionary, overwriting any duplicates.\n        ",e._h("note",["\n            Any merges will have an effect on all validator instances as the messages dictionary is shared.\n        "])," ",e._h("code-block",{staticClass:"language-javascript"},["\n            import { Validator } from 'vee-validate';\n\n            const dictionary = {\n                en: {\n                    messages: {\n                        alpha: () => 'Some English Message'\n                    }\n                },\n                ar: {\n                    messages: {\n                        alpha: () => 'Some Arabic Message'\n                    }\n                }\n            };\n\n            Validator.updateDictionary(dictionary);\n\n            const validator = new Validator({ first_name: 'alpha' });\n            validator.setLocale('ar'); // now this validator will generate messages in arabic.\n        "])]),e._h("p",["\n            Usually you would stucture your language files for your app rather than adding hardcoded strings like the example above, check the ",e._h("router-link",{staticClass:"link",attrs:{to:{name:"localization"}}},["localization guide"])," for a better approach.\n        "])," ",e._h("note",["\n            You must provide the messages in an object path like: ",e._h("code",["dictionary.locale.message"]),".\n        "])," ",e._h("p")," ",e._m(22)," ",e._h("p",['\n        Like the custom messages, the validators share a dictionary containing the attribute names, for example if you want to use "Email Address" instead of "email" in your error messages, this can be easily acheived by including an ',e._h("code",["attributes"])," object in the dictionary.\n        ",e._h("br"),e._h("br"),"Unlike messages, no attributes are included in the default dictionary.\n        ",e._h("code-block",{staticClass:"language-javascript"},["\n            import { Validator } from 'vee-validate';\n\n            const dictionary = {\n                en: {\n                    attributes: {\n                        email: 'Email Address'\n                    }\n                },\n                ar: {\n                    attributes: {\n                        email: 'البريد الاليكتروني'\n                    }\n                }\n            };\n\n            Validator.updateDictionary(dictionary);\n        "])," ",e._h("note",["\n            If the attribute is not found for the current locale, it will fallback to the binding expression or the field name. If you use the ",e._h("router-link",{attrs:{to:{name:"localization",hash:"#attributes-data-vv-as"}}},["data-vv-as"])," attribute it will take precedence over the internal dictionary.\n        "])])])},staticRenderFns:[function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"syntax"}},[e._h("a",{attrs:{href:"#syntax"}},["Syntax"])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"available-validations"}},[e._h("a",{attrs:{href:"#available-validations"}},["Available Rules"])])},function(){var e=this;return e._h("p",[e._h("code",{
staticClass:"inline"},["vee-validate"])," Comes out of the box with many validation rules, which are:\n    "])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["target:"]),"The input name to be validated against. must have the same format as the date_format rule."])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["min:"])," The minimum value."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["max:"])," The maximum value."])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["target:"])," The name of the confirmation field."])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["min:"]),"The minimum allowed value for date. must be in the same format as the date_format rule."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["max:"]),"The maximum allowed value for date. must be in the same format as the date_format rule."])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["format:"])," The date format. See ",e._h("a",{attrs:{href:"http://momentjs.com/docs/#/parsing/string-format/"}},["momentjs parsing."])])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["decmials:"])," The maximum allowed number of decimal point numbers. Not passing the decmials will accept numeric data which may or may not contain decimal point numbers."])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["length:"])," The number of digits."])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["width:"])," The width of the image."])," ",e._h("li",[e._h("code",{staticClass:"inline"},["height:"])," The height of the image."])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("code",{staticClass:"inline"},["args:"])," Comma separated list of extensions. ex: ",e._h("code",{staticClass:"inline"},["ext:jpg,png,bmp,svg"]),".\n            "])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("code",{staticClass:"inline"},["args:"])," Comma separated list of values. ex ",e._h("code",{staticClass:"inline"},["in:1,2,3,4"])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["length:"])," A numeric value representing the maximum number of characters."])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("code",{staticClass:"inline"},["args:"])," List of comma separated mime types. ",e._h("code",{staticClass:"inline"},["mimes:image/jpeg|image/png"])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["length:"])," A numeric value representing the minimum number of characters."])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("code",{staticClass:"inline"},["args:"])," Comma separated list of invalid values. ex: ",e._h("code",{staticClass:"inline"},["not_in:1,2,3,4"])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["pattern:"])," A regular expression"])," ",e._h("li",[e._h("code",{staticClass:"inline"},["flags:"])," list of regular expression flags (optional)"])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["size:"])," The maximum file size in kilobytes."])])])},function(){var e=this;return e._h("div",{staticClass:"args"},[e._h("span",{staticClass:"args__title"},["args:"])," ",e._h("ul",[e._h("li",[e._h("code",{staticClass:"inline"},["domain:"])," Adds another check if the url belongs to a specific domain. tlds should improve the accuracy."])])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"custom-rules"}},[e._h("a",{attrs:{href:"#custom-rules"}},["Custom Rules"])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"custom-messages"}},[e._h("a",{attrs:{href:"#custom-messages"}},["Custom Messages"])])},function(){var e=this;return e._h("h2",{staticClass:"title is-4",attrs:{id:"custom-attributes"}},[e._h("a",{attrs:{href:"#custom-attributes"}},["Custom Attributes"])])}]}},362:function(e,a){e.exports={render:function(){var e=this;return e._h("code-example",[e._h("div",{staticClass:"columns is-multiline",slot:"example"},[e._h("div",{staticClass:"column is-12"},[e._h("label",{staticClass:"label"},["Email"])," ",e._h("p",{staticClass:"control has-icon has-icon-right"},[e._h("input",{directives:[{name:"model",rawName:"v-model",value:e.email,expression:"email"}],class:{input:!0,"is-danger":e.errors.has("email")},attrs:{name:"email",type:"text",placeholder:"Email"},domProps:{value:e._s(e.email)},on:{input:function(a){a.target.composing||(e.email=a.target.value)}}})," ",e._h("i",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("email"),expression:"errors.has('email')"}],staticClass:"fa fa-warning"})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("email"),expression:"errors.has('email')"}],staticClass:"help is-danger"},[e._s(e.errors.first("email"))])])])," ",e._h("div",{staticClass:"column is-12"},[e._h("label",{staticClass:"label"},["Name"])," ",e._h("p",{staticClass:"control has-icon has-icon-right"},[e._h("input",{directives:[{name:"model",rawName:"v-model",value:e.name,expression:"name"}],class:{input:!0,"is-danger":e.errors.has("name")},attrs:{name:"name",type:"text",placeholder:"Name"},domProps:{value:e._s(e.name)},on:{input:function(a){a.target.composing||(e.name=a.target.value)}}})," ",e._h("i",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("name"),expression:"errors.has('name')"}],staticClass:"fa fa-warning"})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("name"),expression:"errors.has('name')"}],staticClass:"help is-danger"},[e._s(e.errors.first("name"))])])])," ",e._h("p",{staticClass:"control"},[e._h("button",{staticClass:"button is-primary",attrs:{type:"button",name:"button"},on:{click:e.validateForm}},["Validate All"])," ",e._h("button",{staticClass:"button is-danger",attrs:{type:"button",name:"button"},on:{click:e.clearErrors}},["Clear"])])])," ",e._h("div",{slot:"code-html"},['\n        <div class="columns is-multiline">\n            <div class="column is-12">\n                <label class="label">Email</label>\n                <p class="control has-icon has-icon-right">\n                    <input v-model="email" name="email" :class="{\'input\': true, \'is-danger\': errors.has(\'email\') }" type="text" placeholder="Email">\n                    <i v-show="errors.has(\'email\')" class="fa fa-warning"></i>\n                    <span v-show="errors.has(\'email\')" class="help is-danger">'+e._s("{{ errors.first('email') }}")+'</span>\n                </p>\n            </div>\n            <div class="column is-12">\n                <label class="label">Name</label>\n                <p class="control has-icon has-icon-right">\n                    <input v-model="name" name="name" :class="{\'input\': true, \'is-danger\': errors.has(\'name\') }" type="text" placeholder="Name">\n                    <i v-show="errors.has(\'name\')" class="fa fa-warning"></i>\n                    <span v-show="errors.has(\'name\')" class="help is-danger">'+e._s("{{ errors.first('name') }}")+'</span>\n                </p>\n            </div>\n            <p class="control">\n                <button class="button is-primary" @click="validateForm" type="button" name="button">Validate All</button>\n                <button class="button is-danger" @click="clearErrors" type="button" name="button">Clear</button>\n            </p>\n        </div>\n    '])," ",e._h("div",{slot:"code-js"},["\n        import Vue from 'vue';\n        import { Validator } from 'vee-validate';\n\n        new Vue({\n            el: '#app',\n            validator: null, // private reference\n            data() {\n                return {\n                    email: '',\n                    name: '',\n                    errors: null\n                }\n            },\n            watch: {\n                email(value) {\n                    this.validator.validate('email', value);\n                },\n                name(value) {\n                    this.validator.validate('name', value);\n                }\n            },\n            methods: {\n                validateForm() {\n                    this.validator.validateAll({\n                        email: this.email,\n                        name: this.name\n                    });\n                },\n                clearErrors() {\n                    this.errors.clear();\n                }\n            },\n            created() {\n                this.validator = new Validator({\n                    email: 'required|email',\n                    name: 'required|alpha|min:3'\n                });\n                this.$set('errors', this.validator.errorBag); // update the data.\n            }\n        });\n    "])])},staticRenderFns:[]}},363:function(e,a){e.exports={render:function(){var e=this;return e._h("code-example",[e._h("div",{staticClass:"column is-12",slot:"example"},[e._h("label",{staticClass:"label",attrs:{for:"email"}},["Email"])," ",e._h("p",{class:{control:!0}},[e._h("input",{directives:[{name:"validate",rawName:"v-validate"}],class:{input:!0,"is-danger":e.errors.has("email")},attrs:{"data-vv-rules":"required|email",name:"email",type:"text",placeholder:"Email"}})," ",e._h("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("email"),expression:"errors.has('email')"}],staticClass:"help is-danger"},[e._s(e.errors.first("email"))])])])," ",e._h("div",{slot:"code-html"},['\n        <div class="column is-12">\n            <label class="label" for="email">Email</label>\n            <p :class="{ \'control\': true }">\n                <input v-validate data-vv-rules="required|email" :class="{\'input\': true, \'is-danger\': errors.has(\'email\') }" name="email" type="text" placeholder="Email">\n                <span v-show="errors.has(\'email\')" class="help is-danger">'+e._s("{{ errors.first('email') }}")+"</span>\n            </p>\n        </div>\n    "])," ",e._h("div",{slot:"code-js"},["\n        import Vue from 'vue';\n        import VeeValidate from 'vee-validate';\n\n        Vue.use(VeeValidate);\n\n        new Vue({\n            el: '#app'\n        });\n    "])])},staticRenderFns:[]}}});